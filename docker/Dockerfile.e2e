FROM node:18.14.0-alpine as web-builder
WORKDIR /app
COPY frontend/package.json frontend/package-lock.json ./
RUN npm ci && npm cache clean --force

ENV INSTRUMENT_COVERAGE=true
ENV DISABLE_SW=true
ARG DEMO_MODE
ENV NEXT_PUBLIC_APP_DEMO=${DEMO_MODE}
ARG COMMIT_SHA
ENV NEXT_PUBLIC_GIT_COMMIT_HASH=${COMMIT_SHA}
ARG BUILD_VERSION
ENV NEXT_PUBLIC_VERSION=${BUILD_VERSION}

COPY frontend .
RUN npm run build && npm run export

# RUNTIME
FROM rust:1.70.0 AS runtime
ENV CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse

RUN rustup component add llvm-tools-preview
RUN wget -q https://github.com/mozilla/grcov/releases/download/v0.8.13/grcov-x86_64-unknown-linux-gnu.tar.bz2 && \
  tar xvf grcov-x86_64-unknown-linux-gnu.tar.bz2 && \
  rm grcov-x86_64-unknown-linux-gnu.tar.bz2 && \
  mv grcov /usr/local/bin/grcov

WORKDIR /app
ENV RUSTFLAGS="-C instrument-coverage"
COPY backend backend
WORKDIR /app/backend
RUN LLVM_PROFILE_FILE="api-unit-%p-%m.profraw" cargo test --tests --features e2e,spa && \
  grcov . \
   -s . \
   --binary-path target/debug \
   --branch \
   --ignore-not-existing \
   --excl-start 'mod test* \{' \
   --ignore 'tests/*' \
   --ignore "*test.rs" \
   --ignore "*tests.rs" \
   --ignore "*github.com*" \
   --ignore "*libcore*" \
   --ignore "*rustc*" \
   --ignore "*liballoc*" \
   --ignore "*cargo*" \
   -t lcov \
   -o unit_coverage.info && \
  cargo build --features e2e,spa && \
  rm -rf target/debug/deps && \
  rm -rf target/debug/incremental && \
  rm -rf target/debug/build
COPY --from=web-builder /app/out /app/web

WORKDIR /app
EXPOSE 8000
ENV PORT=8000
ENV LLVM_PROFILE_FILE="api-%p-%m.profraw"
CMD /app/backend/target/debug/backend
