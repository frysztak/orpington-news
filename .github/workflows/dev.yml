name: CI/CD DEV

on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'dev'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: 'yarn'

      - name: Install deps
        run: |
          yarn install --immutable

      - name: Build
        run: |
          yarn build

      - name: Test
        run: |
          yarn test

  docker:
    if: github.event_name != 'pull_request'
    name: Push to Docker Registry
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      image_sha: ${{ steps.buildDocker.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch

      - name: Build and push
        uses: docker/build-push-action@v3
        id: buildDocker
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "COMMIT_SHA=${{github.sha}}"
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:dev-buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:dev-buildcache,mode=max

  deploy:
    if: github.event_name != 'pull_request'
    name: Deploy to Dokku
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - uses: appleboy/ssh-action@master
        with:
          username: 'dokku'
          host: 'orpington.software'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            dokku git:from-image news-dev ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:${{ needs.build.outputs.image_sha }}
