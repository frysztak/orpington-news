name: CD Master

on:
  push:
    branches:
      - 'master'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Linter
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      - uses: ./.github/actions/lint
        name: Run ESLint

  unit:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      - uses: ./.github/actions/unit
        name: Run unit tests

  e2e:
    runs-on: ubuntu-latest
    name: E2E tests
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      - uses: ./.github/actions/e2e
        name: Run E2E tests
        with:
          cypress-key: ${{ secrets.CYPRESS_RECORD_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Push to Docker Registry
    runs-on: ubuntu-latest
    needs: [lint, unit, e2e]
    outputs:
      image_sha: ${{ steps.buildDocker.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract version
        uses: martinbeentjes/npm-get-version-action@main
        id: package-version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.package-version.outputs.current-version }}

      - name: Build and push
        uses: docker/build-push-action@v3
        id: buildDocker
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            BUILD_VERSION=${{ steps.package-version.outputs.current-version }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-buildcache,mode=max
