name: 'E2E tests'
description: 'Runs E2E tests using Cypress'
inputs:
  cypress-key:
    description: 'Cypress record key'
    required: true
  github-token:
    description: 'GitHub token'
    required: true
  codecov-token:
    description: 'Codecov.io token'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
      name: Checkout

    - uses: actions/setup-node@v3
      name: Setup Node.js
      with:
        node-version-file: '.nvmrc'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      uses: docker/build-push-action@v3
      id: buildDocker
      with:
        context: .
        file: ./docker/Dockerfile.e2e
        platforms: linux/amd64
        push: false
        load: true
        pull: true
        tags: orpington-news-e2e:latest
        build-args: |
          INSTRUMENT_COVERAGE=true
          DISABLE_SW=true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Start Docker containers
      shell: bash
      run: |
        docker compose -f docker-compose.e2e.yml up -d
        sleep 10  # wait for database to be ready

    - name: Run E2E tests
      uses: cypress-io/github-action@v5
      with:
        browser: chrome
        record: false
        working-directory: e2e
      env:
        CYPRESS_RECORD_KEY: ${{ inputs.cypress-key }}
        GITHUB_TOKEN: ${{ inputs.github-token }}

    - name: Copy API coverage data
      shell: bash
      run: |
        docker exec orpington-news-e2e curl --silent -X POST http://localhost:8000/api/e2e/exit || true
        docker exec orpington-news-e2e grcov . -s backend --binary-path backend/target/debug --branch --ignore-not-existing -t lcov -o coverage.info
        docker cp orpington-news-e2e:/app/coverage.info api_coverage.info

    - uses: codecov/codecov-action@v3
      name: Upload Web coverage
      with:
        token: ${{ inputs.codecov-token }}
        flags: e2e-web
        directory: e2e/coverage

    - uses: codecov/codecov-action@v3
      name: Upload API coverage
      with:
        token: ${{ inputs.codecov-token }}
        flags: e2e-api
        files: ./api_coverage.info
